// This file has been autogenerated from a class added in the UI designer.

using System;
using CloudCoin_SafeScan;
using Foundation;
using UIKit;

namespace CloudCoinIOS
{
	public partial class ExportViewController : BaseFormSheet
	{
		private UIColor borderColor = UIColor.FromRGB(122, 134, 148);

		public ExportViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			InitializeProperties();

			InitializeMethods();
		}

		private void InitializeProperties()
		{
			SetBorderColor(pickerOne);
			SetBorderColor(pickerFive);
			SetBorderColor(picker25);
			SetBorderColor(picker100);
			SetBorderColor(picker250);

			var safe = Safe.Instance;
			pickerOne.Model = new CoinPickerViewModel(safe.Ones.GoodQuantity);
			pickerFive.Model = new CoinPickerViewModel(safe.Fives.GoodQuantity);
			picker25.Model = new CoinPickerViewModel(safe.Quarters.GoodQuantity);
			picker100.Model = new CoinPickerViewModel(safe.Hundreds.GoodQuantity);
			picker250.Model = new CoinPickerViewModel(safe.KiloQuarters.GoodQuantity);
		}

		private void SetBorderColor(UIView view)
		{
			view.Layer.MasksToBounds = true;
			view.Layer.BorderColor = borderColor.CGColor;
		}

		private void InitializeMethods()
		{
			btnCancel.TouchUpInside += (sender, e) =>
			{
				RemoveAnimate();
			};
		}
	}

	public class CoinPickerViewModel : UIPickerViewModel
	{
		private int count;
		public CoinPickerViewModel(int count)
		{
			this.count = count;
		}

		public override nint GetRowsInComponent(UIPickerView pickerView, nint component)
		{
			return count + 1;
		}

		public override string GetTitle(UIPickerView pickerView, nint row, nint component)
		{
			return row.ToString();
		}

		public override nint GetComponentCount(UIPickerView pickerView)
		{
			return 1;
		}
	}
}
